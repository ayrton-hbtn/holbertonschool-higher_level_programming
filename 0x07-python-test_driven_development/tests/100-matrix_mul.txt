==============================
Module test: 100-matrix_mul.py
==============================


Import module:
--------------
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


Test cases:
-----------

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix_mul()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul([(1, 2)], [(3, 4), (5, 6)])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([1, 2], [3, 4])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[]], [[]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([], [])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ['a', 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ["cat", 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul("Holberton", [[1, 2], [5, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], "Holberton")
Traceback (most recent call last):
TypeError: m_b must be a list
