'''Test cases for matrix_divided() function
'''

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = []
>>> matrix_divided(matrix, 3)
[]

>>> matrix = [1, 2]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 9, in matrix_divided
TypeError: object of type 'int' has no len()

>>> matrix = [[1],["a"]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 13, in matrix_divided
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 0], [2, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 10, in matrix_divided
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67], [1.0, 1.33]]

>>> matrix_divided(matrix, 2/3)
[[1.5, 3.0], [4.5, 6.0]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 7, in matrix_divided
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, -1)
[[-1.0, -2.0], [-3.0, -4.0]]

>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in matrix_divided
TypeError: div must be a number
