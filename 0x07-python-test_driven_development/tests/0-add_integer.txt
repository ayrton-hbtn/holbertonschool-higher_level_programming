''' Test cases for add_integer function
'''

>>> add_integer = __import__('0-add_integer').add_integer
    
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> print(add_integer(True))
99

>>> print(add_integer(False))
98

>>> print(add_integer(1.7976931348623157e+309))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in add_integer
OverflowError: cannot convert float infinity to integer

>>> print(add_integer(float("NaN")))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 6, in add_integer
ValueError: cannot convert float NaN to integer

>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in add_integer
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> add_integer("")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 3, in add_integer
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
